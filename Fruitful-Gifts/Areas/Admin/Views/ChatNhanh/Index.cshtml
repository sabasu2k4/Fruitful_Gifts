
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/shared/_LayoutAdmin.cshtml";
}

<style>
    #main {
        display: flex;
        margin: auto;
        border-radius: 10px;
        overflow: hidden;
        max-width: 1000px;
        height: 80vh;
        box-shadow: 0 0 15px rgba(0,0,0,0.1);
        font-family: Arial, sans-serif;
    }

    /* Danh sách user */
    #userList {
        width: 30%;
        background: #fff;
        border-right: 1px solid #ddd;
        overflow-y: auto;
    }

    .user-item {
        padding: 15px;
        border-bottom: 1px solid #eee;
        cursor: pointer;
    }

        .user-item:hover {
            background-color: #f0f0f0;
        }

    /* Khu vực chat bên phải */
    .chat-area {
        width: 70%;
        display: flex;
        flex-direction: column;
    }

    #chatHeader {
        background-color: #003366;
        color: white;
        padding: 12px;
        font-weight: bold;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    #chatBoxAdmin {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 8px;
        padding: 10px;
        overflow-y: auto;
        background-color: #f9f9f9;
    }

    #inputArea {
        display: flex;
        padding: 10px;
        border-top: 1px solid #ddd;
        background-color: #fff;
    }

    #messageInputAdmin {
        flex: 1;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

        #messageInputAdmin:focus {
            outline: none;
            border-color: #003366;
        }

    #sendButtonAdmin {
        background-color: #003366;
        color: #fff;
        border: none;
        padding: 10px 15px;
        margin-left: 10px;
        cursor: pointer;
        border-radius: 5px;
    }

        #sendButtonAdmin:hover {
            background-color: #0056b3;
        }

    /* Tin nhắn từ khách (hiển thị bên phải) */
    .client-message {
        align-self: flex-start;
        background-color: #e8e8e8;
        max-width: 70%;
        padding: 10px;
        border-radius: 10px;
        font-size: 14px;
        word-wrap: break-word;
        text-align: left;
    }

    /* Tin nhắn từ admin (hiển thị bên trái) */
    .admin-message {
        align-self: flex-end;
        background-color: #d6eaff;
        max-width: 70%;
        padding: 10px;
        border-radius: 10px;
        font-size: 14px;
        word-wrap: break-word;
        text-align: left;
    }

    .timestamp {
        font-size: 10px;
        color: #888;
        display: block;
        margin-top: 5px;
        text-align: right;
    }

</style>


<div id="main">
    <div id="userList">
        <div id="chatHeader">
            <span>Danh sách khách hàng</span>
        </div>
    </div>

    <div class="chat-area">
        <div id="chatHeader">
            <span>Admin Chat</span>
        </div>
        <div id="chatBoxAdmin"></div>
        <div id="inputArea">
            <input id="messageInputAdmin" placeholder="Nhập tin nhắn..." autocomplete="off" />
            <button id="sendButtonAdmin" onclick="sendToClient()">Gửi</button>
        </div>
    </div>
</div>

<script>
    document.getElementById("messageInputAdmin").addEventListener("keydown", function (event) {
        if (event.key === "Enter" && !event.shiftKey) {
            event.preventDefault(); // Ngăn xuống dòng nếu có Shift
            sendToClient();
        }
    });

    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chathub?role=admin")
        .build();

    const conversations = {}; // Lưu tin nhắn theo clientId
    let selectedClientId = null;

    connection.on("ReceiveFromClient", function (clientId, clientName, message) {
        const time = new Date().toLocaleTimeString();

        if (!conversations[clientId]) {
            conversations[clientId] = [];
            addUserToList(clientId, clientName, message);
        } else {
            updateUserMessage(clientId, clientName, message);
        }

        conversations[clientId].push({ sender: "client", message, time });

        if (selectedClientId === clientId) {
            appendMessage("client", message, time);
        }
    });


    async function sendToClient() {
        const input = document.getElementById("messageInputAdmin");
        const message = input.value;
        if (!selectedClientId) {
            alert("Vui lòng chọn khách hàng từ danh sách!");
            return;
        }

        const time = new Date().toLocaleTimeString();
        conversations[selectedClientId].push({ sender: "admin", message, time });

        await connection.invoke("SendFromAdminOrStaff", selectedClientId, message);
        updateUserMessage(selectedClientId, message);

        appendMessage("admin", message, time);
        input.value = "";
    }

    function addUserToList(clientId, clientName, message) {
        const userList = document.getElementById("userList");
        const userItem = document.createElement("div");
        userItem.id = "user-" + clientId;
        userItem.textContent = `${clientName}: ${message}`;
        userItem.classList.add("user-item");
        userItem.style.cursor = "pointer";
        userItem.onclick = () => showConversation(clientId);
        userList.appendChild(userItem);
    }

    function updateUserMessage(clientId, clientName, message) {
        const userItem = document.getElementById("user-" + clientId);
        if (userItem) {
            userItem.textContent = `${clientName}: ${message}`;
        }
    }

    function showConversation(clientId) {
        selectedClientId = clientId;
        const chatBox = document.getElementById("chatBoxAdmin");
        chatBox.innerHTML = "";

        const conv = conversations[clientId] || [];
        for (const msg of conv) {
            appendMessage(msg.sender, msg.message, msg.time);
        }
    }

    function appendMessage(sender, message, time) {
        const chatBox = document.getElementById("chatBoxAdmin");
        const div = document.createElement("div");
        div.className = sender + "-message";
        // const label = sender === "admin" ? "Bạn" : "Khách";
        div.innerHTML = `${message}<br><span class="timestamp">${time}</span>`;
        chatBox.appendChild(div);
        chatBox.scrollTop = chatBox.scrollHeight;
    }

    connection.start().catch(err => console.error(err.toString()));
</script>




