@model IEnumerable<Fruitful_Gifts.Database.NhapHang>
@{
    ViewData["Title"] = "Quản lý nhập hàng";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    var today = DateTime.Now.ToString("yyyy-MM-dd");
    var trangThaiMap = new Dictionary<int, (string Text, string BadgeClass)> {
        {1, ("Hoàn thành", "bg-success")},
        {0, ("Đã hủy", "bg-danger")}
    };
}

<style>
    :root {
        --primary-color: #1a73e8;
        --secondary-color: #f8f9fa;
        --success-color: #28a745;
        --danger-color: #dc3545;
        --warning-color: #ffc107;
        --info-color: #17a2b8;
        --light-border: #e9ecef;
        --card-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        --hover-color: #f1f5f9;
    }

    .stats-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background: white;
        border-radius: 10px;
        padding: 20px;
        box-shadow: var(--card-shadow);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border-left: 4px solid var(--primary-color);
        position: relative;
        overflow: hidden;
    }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
        }

    .stat-icon {
        width: 50px;
        height: 50px;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 15px;
        font-size: 24px;
        background: rgba(26, 115, 232, 0.1);
        color: var(--primary-color);
    }

    .stat-value {
        font-size: 24px;
        font-weight: 600;
        margin-bottom: 5px;
        color: #2d3748;
    }

    .stat-label {
        font-size: 14px;
        color: #718096;
    }

    .card {
        border-radius: 10px;
        box-shadow: var(--card-shadow);
        border: none;
        margin-bottom: 24px;
    }

    .card-header {
        padding: 16px 20px;
        background: white;
        border-bottom: 1px solid var(--light-border);
        font-weight: 600;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .table-container {
        overflow: hidden;
        border-radius: 10px;
        box-shadow: var(--card-shadow);
    }

    .table {
        margin-bottom: 0;
    }

        .table thead th {
            background-color: #f8fafc;
            color: #4a5568;
            font-weight: 600;
            padding: 12px 16px;
            border-top: none;
            border-bottom: 1px solid var(--light-border);
        }

        .table tbody tr {
            transition: background-color 0.2s;
        }

            .table tbody tr:hover {
                background-color: var(--hover-color);
            }

        .table tbody td {
            padding: 12px 16px;
            vertical-align: middle;
            border-top: 1px solid var(--light-border);
        }

    .table-hover tbody tr:hover {
        background-color: rgba(241, 245, 249, 0.7);
    }

    .avatar {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        background: #e9ecef;
        color: var(--primary-color);
        font-weight: 600;
        font-size: 14px;
    }

    .badge {
        font-weight: 500;
        padding: 6px 10px;
        border-radius: 50px;
    }

    .btn-group-sm .btn {
        padding: 5px 10px;
        border-radius: 6px;
    }

    .btn-outline-primary {
        color: var(--primary-color);
        border-color: var(--primary-color);
    }

        .btn-outline-primary:hover {
            background-color: var(--primary-color);
            color: white;
        }

    .btn-outline-secondary {
        color: #6c757d;
        border-color: #dee2e6;
    }

        .btn-outline-secondary:hover {
            background-color: #f8f9fa;
            border-color: #dee2e6;
        }

    .btn-icon {
        width: 32px;
        height: 32px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0;
    }

    .filter-section {
        background: white;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 24px;
        box-shadow: var(--card-shadow);
    }

    .filter-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 1px solid var(--light-border);
    }

    .filter-actions {
        display: flex;
        gap: 10px;
    }

    .page-header-title {
        display: flex;
        align-items: center;
        font-size: 1.5rem;
        font-weight: 600;
        color: #2d3748;
    }

        .page-header-title i {
            margin-right: 12px;
            font-size: 1.8rem;
            color: var(--primary-color);
        }

    .action-buttons {
        display: flex;
        gap: 12px;
        margin-top: 20px;
    }

    .empty-state {
        text-align: center;
        padding: 40px 20px;
    }

        .empty-state img {
            width: 120px;
            opacity: 0.7;
            margin-bottom: 20px;
        }

        .empty-state h5 {
            color: #718096;
            font-weight: 500;
        }

    .modal-content {
        border-radius: 12px;
        overflow: hidden;
    }

    .modal-header {
        background: var(--primary-color);
        color: white;
        padding: 16px 20px;
    }

    .modal-title {
        font-weight: 600;
        font-size: 1.2rem;
    }

    .btn-close {
        filter: invert(1);
    }

    .pagination {
        margin-bottom: 0;
    }

        .pagination .page-item .page-link {
            border-radius: 6px;
            margin: 0 3px;
            border: none;
            color: #4a5568;
        }

        .pagination .page-item.active .page-link {
            background: var(--primary-color);
            color: white;
        }

    .create-btn {
        display: inline-flex;
        align-items: center;
        background: white;
        border: 1px solid #dee2e6;
        border-radius: 8px;
        padding: 8px 16px;
        color: var(--primary-color);
        font-weight: 500;
        transition: all 0.2s;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

        .create-btn:hover {
            background: #f8fafc;
            color: var(--primary-color);
            text-decoration: none;
            box-shadow: 0 4px 8px rgba(0,0,0,0.08);
            transform: translateY(-2px);
        }

        .create-btn i {
            margin-right: 8px;
            font-size: 1.1rem;
        }

    .summary-badge {
        background: #f8fafc;
        padding: 4px 10px;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 500;
        color: #4a5568;
    }
</style>

<div class="container-fluid">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="page-header-title">
                <i class="fas fa-arrow-circle-down"></i>QUẢN LÝ NHẬP HÀNG
            </h1>
        </div>
        <div>
            <a href="@Url.Action("TaoPhieuNhap", "QuanLyNhapHang", new { area = "Admin" })"
               class="create-btn text-decoration-none">
                <i class="fas fa-box-open me-1"></i> Nhập hàng
            </a>
        </div>
    </div>

    <!-- Stats -->
    <div class="stats-container">
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-file-invoice"></i>
            </div>
            <div class="stat-value">@ViewBag.TongPhieuNhap</div>
            <div class="stat-label">Tổng phiếu nhập</div>
        </div>

        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-money-bill-wave"></i>
            </div>
            <div class="stat-value">@((ViewBag.TongGiaTriNhap as decimal?)?.ToString("N0") ?? "0") VNĐ</div>
            <div class="stat-label">Tổng giá trị</div>
        </div>

        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-calendar-minus"></i>
            </div>
            <div class="stat-value">
                @(ViewBag.OldestDate != null ? ((DateTime)ViewBag.OldestDate).ToString("dd/MM/yyyy") : "N/A")
            </div>
            <div class="stat-label">Ngày nhập cũ nhất</div>
        </div>

        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-calendar-plus"></i>
            </div>
            <div class="stat-value">
                @(ViewBag.NewestDate != null ? ((DateTime)ViewBag.NewestDate).ToString("dd/MM/yyyy") : "N/A")
            </div>
            <div class="stat-label">Ngày nhập mới nhất</div>
        </div>
    </div>

    <!-- Filter Card -->
    <div class="filter-section">
        <div class="filter-header">
            <h5 class="mb-0">
                <i class="fas fa-filter text-muted me-2"></i>Bộ lọc
            </h5>
        </div>

        <form method="get" class="row gy-3 gx-3 align-items-end">
            <div class="col-md-4">
                <label class="form-label small mb-1">Tìm kiếm</label>
                <div class="input-group input-group-sm">
                    <span class="input-group-text bg-light"><i class="fas fa-search"></i></span>
                    <input type="text" name="searchString" class="form-control"
                           placeholder="Mã phiếu, tên NCC..." value="@Context.Request.Query["searchString"]">
                </div>
            </div>

            <div class="col-md-3">
                <label class="form-label small mb-1">Trạng thái</label>
                <select name="trangThai" class="form-select form-select-sm">
                    <option value="">Tất cả</option>
                    @foreach (var kv in trangThaiMap)
                    {
                        <option value="@kv.Key"
                        @(Context.Request.Query["trangThai"] == kv.Key.ToString() ? "selected" : "")>
                            @kv.Value.Text
                        </option>
                    }
                </select>
            </div>

            <div class="col-md-2">
                <label class="form-label small mb-1">Từ ngày</label>
                <input type="date" name="fromDate" class="form-control form-control-sm"
                       value="@Context.Request.Query["fromDate"]" max="@today">
            </div>

            <div class="col-md-2">
                <label class="form-label small mb-1">Đến ngày</label>
                <input type="date" name="toDate" class="form-control form-control-sm"
                       value="@Context.Request.Query["toDate"]" max="@today">
            </div>

            <div class="col-md-1">
                <button type="submit" class="btn btn-primary btn-sm w-100">
                    <i class="fas fa-filter me-1"></i> Lọc
                </button>
            </div>
            <div class="col-md-1">
                <a href="@Url.Action("NhapHang")" class="btn btn-outline-secondary btn-sm w-100" title="Xóa bộ lọc">
                    <i class="fas fa-sync-alt"></i>
                </a>
            </div>
        </form>
    </div>

    <!-- Table -->
    <div class="card">
        <div class="card-body p-0">
            <div class="table-container">
                <table class="table table-hover align-middle">
                    <thead>
                        <tr>
                            <th class="ps-4">MÃ PN</th>
                            <th>Nhà cung cấp</th>
                            <th>Ngày nhập</th>
                            <th class="text-end">Tổng tiền</th>
                            <th>Trạng thái</th>
                            <th class="text-center pe-4">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            foreach (var nh in Model)
                            {
                                <tr>
                                    <td class="ps-4 fw-bold">#@nh.MaNhap</td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="avatar me-3">
                                                @if (nh.MaNccNavigation?.TenNcc != null)
                                                {
                                                    @nh.MaNccNavigation.TenNcc.Substring(0, 1)
                                                }
                                            </div>
                                            <div>
                                                <div class="fw-medium">@nh.MaNccNavigation?.TenNcc</div>
                                                <small class="text-muted">@nh.MaNccNavigation?.Sdt</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div>@nh.NgayNhap?.ToString("dd/MM/yyyy")</div>
                                        <small class="text-muted">@nh.NgayNhap?.ToString("HH:mm")</small>
                                    </td>
                                    <td class="text-end fw-bold text-primary">
                                        @(nh.TongTien?.ToString("N0") + " VNĐ")
                                    </td>
                                    <td>
                                        @if (nh.TrangThai.HasValue && trangThaiMap.ContainsKey(nh.TrangThai.Value))
                                        {
                                            var status = trangThaiMap[nh.TrangThai.Value];
                                            <span class="badge @status.BadgeClass">
                                                @status.Text
                                            </span>
                                        }
                                    </td>
                                    <td class="text-center pe-4">
                                        <div class="d-flex justify-content-center gap-2">
                                            <button type="button" class="btn btn-icon btn-outline-primary"
                                                    onclick="showDetailModal(@nh.MaNhap)" title="Xem chi tiết">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                            <button type="button" class="btn btn-icon btn-outline-secondary"
                                                    onclick="printPhieuNhap(@nh.MaNhap)" title="In phiếu nhập">
                                                <i class="fas fa-print"></i>
                                            </button>
@*                                             @if (nh.TrangThai == 1)
                                            {
                                                <button type="button" class="btn btn-icon btn-outline-danger"
                                                        onclick="huyPhieuNhap(@nh.MaNhap)" title="Hủy phiếu nhập">
                                                    <i class="fas fa-times"></i>
                                                </button>
                                            } *@
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6">
                                    <div class="empty-state">
                                        <img src="~/Admin/gs.jpg" alt="Empty">
                                        <h5>Không tìm thấy phiếu nhập nào</h5>
                                        <p class="text-muted">Hãy tạo phiếu nhập mới hoặc điều chỉnh bộ lọc</p>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Pagination -->
        @if (ViewBag.TotalPages > 1)
        {
            <div class="card-footer bg-white border-top">
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center mb-0">
                        <!-- Previous -->
                        <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("NhapHang", new { page = ViewBag.CurrentPage - 1 })">
                                <i class="fas fa-angle-left"></i>
                            </a>
                        </li>

                        <!-- Page numbers -->
                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                        {
                            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("NhapHang", new { page = i })">@i</a>
                            </li>
                        }

                        <!-- Next -->
                        <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("NhapHang", new { page = ViewBag.CurrentPage + 1 })">
                                <i class="fas fa-angle-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        }
    </div>
</div>

<!-- Detail Modal -->
<div class="modal fade" id="detailModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Chi tiết phiếu nhập</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalBody">
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<iframe id="printFrame" name="printFrame" style="display: none;"></iframe>

<script>
    function showDetailModal(maNhap) {
        const modal = new bootstrap.Modal(document.getElementById('detailModal'));
        modal.show();

        // Hiển thị loading
        $('#modalBody').html(`
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            `);

        // Gọi AJAX để lấy nội dung chi tiết
        $.ajax({
            url: '@Url.Action("Detail", "QuanLyNhapHang", new { area = "Admin" })/' + maNhap,
            type: 'GET',
            success: function (data) {
                $('#modalBody').html(data);
            },
            error: function () {
                $('#modalBody').html(`
                        <div class="alert alert-danger text-center py-4">
                            <i class="fas fa-exclamation-triangle fa-2x mb-3"></i>
                            <h5>Không thể tải dữ liệu chi tiết</h5>
                            <p>Vui lòng thử lại sau</p>
                        </div>
                    `);
            }
        });
    }

    function printPhieuNhap(maNhap) {
        // Tạo một iframe ẩn
        let iframe = document.getElementById('printFrame');
        if (!iframe) {
            iframe = document.createElement('iframe');
            iframe.id = 'printFrame';
            iframe.name = 'printFrame';
            iframe.style.display = 'none';
            document.body.appendChild(iframe);
        }

        // Hiển thị loading
        Swal.fire({
            title: 'Đang chuẩn bị in',
            html: 'Vui lòng chờ trong giây lát...',
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            }
        });

        // Gửi yêu cầu in
        const url = '@Url.Action("PrintPartial", "QuanLyNhapHang", new { area = "Admin" })/' + maNhap;
        iframe.src = url;

        // Khi iframe tải xong, in nội dung
        iframe.onload = function () {
            Swal.close();
            setTimeout(function () {
                try {
                    const iframeWindow = iframe.contentWindow;
                    iframeWindow.focus();
                    iframeWindow.print();
                } catch (e) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi in',
                        text: 'Không thể mở hộp thoại in: ' + e.message
                    });
                }
            }, 300);
        };
    }

    function huyPhieuNhap(maNhap) {
        Swal.fire({
            title: 'Xác nhận hủy phiếu nhập?',
            text: "Bạn có chắc muốn hủy phiếu nhập này? Thao tác này sẽ hoàn trả hàng về kho!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#6c757d',
            confirmButtonText: 'Xác nhận hủy',
            cancelButtonText: 'Quay lại',
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                // Hiển thị loading
                Swal.fire({
                    title: 'Đang xử lý',
                    html: 'Vui lòng chờ...',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                $.ajax({
                    url: '@Url.Action("HuyPhieuNhap", "QuanLyNhapHang", new { area = "Admin" })',
                    type: 'POST',
                    data: { id: maNhap },
                    success: function (response) {
                        Swal.close();
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Thành công!',
                                text: response.message,
                                timer: 1500,
                                showConfirmButton: false
                            }).then(() => {
                                // Làm mới trang để cập nhật dữ liệu
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi',
                                text: response.message
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi hệ thống',
                            text: 'Không thể kết nối đến server'
                        });
                    }
                });
            }
        });
    }
</script>