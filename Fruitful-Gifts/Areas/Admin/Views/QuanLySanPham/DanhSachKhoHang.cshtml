@model List<Fruitful_Gifts.Database.KhoHang>

@{
    ViewData["Title"] = "Quản lý kho hàng";
    Layout = "~/Areas/Admin/Views/shared/_LayoutAdmin.cshtml";
    var maLoaiQuery = Context.Request.Query["maLoai"].ToString();
}

<div class="container-fluid py-4">
    <div class="card shadow-sm rounded-3 border-0 mb-4">
        <div class="card-body">
            <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-center gap-3">
                <h3 class="mb-0 fw-bold text-gradient">
                    <i class="bi bi-box-seam me-2"></i>QUẢN LÝ KHO HÀNG
                </h3>

                <div class="d-flex flex-column flex-md-row gap-3 align-items-md-center">

                    <select id="statusFilter" class="form-select" style="width: 180px;">
                        <option value="">Tất cả trạng thái</option>
                        <option value="1">Đang bán</option>
                        <option value="0">Ngừng bán</option>
                    </select>

                    <select id="stockFilter" class="form-select" style="width: 180px;">
                        <option value="">Tất cả tồn kho</option>
                        <option value="low">Tồn kho thấp (<10)</option>
                        <option value="normal">Tồn kho bình thường</option>
                    </select>
                </div>

                <a href="@Url.Action("NhapHang", "QuanLyNhapHang", new { area = "Admin" })"
                   class="btn btn-primary shadow-sm">
                    <i class="fas fa-box-open me-1"></i>Nhập hàng mới
                </a>
            </div>
        </div>
    </div>

    <div class="card shadow-sm rounded-3 border-0">
        <div class="card-body">
            <div class="table-responsive rounded-3">
                <table id="khoHangTable" class="table table-hover align-middle mb-0 w-100">
                    <thead class="table-light">
                        <tr>
                            <th class="ps-4">Hình ảnh</th>
                            <th>Tên sản phẩm</th>
                            <th class="text-end">Tồn kho</th>
                            <th>Đơn vị</th>
                            <th>Hạn sử dụng</th>
                            <th>Ghi chú</th>
                            <th class="text-center">Trạng thái</th>
                            <th class="text-end pe-4">Ngày cập nhật</th>
                            <th class="text-center">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr data-stock="@(item.SoLuongTon <= 10 ? "low" : "normal")" data-status="@item.TrangThai">
                                <td class="ps-4">
                                    <div class="position-relative" style="width: 50px; height: 50px;">
                                        <img src="~/images/sanpham/@item.MaSpNavigation?.HinhAnh"
                                             alt="@item.MaSpNavigation?.TenSp"
                                             class="rounded-2 object-fit-cover w-100 h-100 border">
                                        @if (item.SoLuongTon <= 10)
                                        {
                                            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                                <i class="bi bi-exclamation-triangle-fill me-1"></i> Ít
                                            </span>
                                        }
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex flex-column">
                                        <span class="fw-semibold">@item.MaSpNavigation?.TenSp</span>
                                        <small class="text-muted">Mã: @item.MaSp</small>
                                    </div>
                                </td>
                                <td class="text-end fw-semibold @(item.SoLuongTon <= 10 ? "text-danger" : "text-success")"
                                    data-id="@item.MaKho" data-stock="@(item.SoLuongTon <= 10 ? "low" : "normal")" data-status="@item.TrangThai">
                                    @item.SoLuongTon.ToString("N0")
                                </td>
                                <td>@item.DonViTinh</td>
                                <td>
                                    @if (item.HSD.HasValue)
                                    {
                                        var expirationClass = item.HSD.Value < DateTime.Now.AddDays(7) ? "text-danger" :
                                        (item.HSD.Value < DateTime.Now.AddDays(30) ? "text-warning" : "text-success");

                                        <span class="@expirationClass">
                                            @item.HSD.Value.ToString("dd/MM/yyyy")
                                            @if (item.HSD.Value < DateTime.Now)
                                            {
                                                <span class="badge bg-danger bg-opacity-10 text-danger ms-1">Hết hạn</span>
                                            }
                                            else if (item.HSD.Value < DateTime.Now.AddDays(7))
                                            {
                                                <span class="badge bg-warning bg-opacity-10 text-warning ms-1">Sắp hết</span>
                                            }
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Không có</span>
                                    }
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.GhiChu))
                                    {
                                        <span class="d-inline-block text-truncate" style="max-width: 200px;"
                                              data-bs-toggle="tooltip" data-bs-placement="top" title="@item.GhiChu">
                                            @item.GhiChu
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Không có</span>
                                    }
                                </td>
                                <td class="text-center">
                                    @if (item.TrangThai == 1)
                                    {
                                        <span class="badge bg-success bg-opacity-10 text-success">
                                            <i class="bi bi-check-circle-fill me-1"></i> Đang bán
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary bg-opacity-10 text-secondary">
                                            <i class="bi bi-pause-circle-fill me-1"></i> Ngừng bán
                                        </span>
                                    }
                                </td>
                                <td class="text-end pe-4">
                                    <span class="text-muted">@item.CreatedAt?.ToString("dd/MM/yyyy")</span>
                                </td>
                                <td class="text-center">
                                    <div class="btn-group btn-group-sm" role="group">
@*                                         <button class="btn btn-outline-primary" title="Chi tiết">
                                            <i class="bi bi-eye-fill"></i>
                                        </button>
                                        <button class="btn btn-outline-success" title="Nhập hàng">
                                            <i class="bi bi-box-arrow-in-down"></i>
                                        </button> *@
                                        <button class="btn btn-outline-warning" title="Chỉnh sửa">
                                            <i class="bi bi-pencil-square"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                @if (!Model.Any())
                {
                    <div class="text-center py-5">
                        <img src="~/admin/images/empty.svg" alt="Empty" style="height: 120px;" class="mb-3">
                        <h5 class="text-muted">Không có dữ liệu kho hàng</h5>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Modal chỉnh sửa số lượng -->
<div class="modal fade" id="editQuantityModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">Cập nhật số lượng tồn kho</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editQuantityForm">
                    <input type="hidden" id="editMaKho" name="MaKho">
                    <div class="mb-3">
                        <label class="form-label">Tên sản phẩm</label>
                        <input type="text" class="form-control" id="editTenSp" readonly>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Số lượng hiện tại</label>
                        <input type="text" class="form-control" id="editSoLuongHienTai" readonly>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Số lượng mới <span class="text-danger">*</span></label>
                        <input type="number" class="form-control" id="editSoLuongMoi" name="SoLuongTon" min="0" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Ghi chú</label>
                        <textarea class="form-control" id="editGhiChu" name="GhiChu"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" id="btnSaveQuantity">Lưu thay đổi</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .text-gradient {
            background: linear-gradient(90deg, #4e73df 0%, #224abe 100%);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .table > :not(:first-child) {
            border-top: none;
        }

        .table thead th {
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.75rem;
            letter-spacing: 0.5px;
        }

        .object-fit-cover {
            object-fit: cover;
        }

        #khoHangTable tbody tr:hover {
            background-color: rgba(0, 0, 0, 0.02);
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button {
            padding: 0.3rem 0.75rem;
            border-radius: 0.375rem;
            margin-left: 2px;
        }

            .dataTables_wrapper .dataTables_paginate .paginate_button.current {
                background: #4e73df;
                color: white !important;
                border: 1px solid #4e73df;
            }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            // Khởi tạo DataTable
            var table = $('#khoHangTable').DataTable({
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/vi.json',
                    search: "_INPUT_",
                    searchPlaceholder: "Tìm kiếm...",
                },
                dom: 'B<"top"f>rt<"bottom"lip><"clear">', // THÊM "B"
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fas fa-file-export"></i> Xuất Excel',
                        className: 'btn btn-outline-secondary mb-3',
                        title: 'Danh sách kho hàng',
                        exportOptions: {
                            columns: ':not(:last-child)' // Không xuất cột "Thao tác"
                        }
                    }
                ],
                pageLength: 10,
                columnDefs: [
                    { orderable: false, targets: [0, 3, 4, 7] },
                    { className: "dt-nowrap", targets: [2, 6] }
                ],
                order: [[6, "desc"]],
                searching: true, // Giữ tính năng tìm kiếm
                filter: false
            });


            // Khởi tạo tooltip
            $('[data-bs-toggle="tooltip"]').tooltip();

            // Xử lý tìm kiếm
            $('#searchInput').keyup(function () {
                table.search($(this).val()).draw();
            });

            // Xử lý lọc trạng thái
            $('#statusFilter').change(function () {
                var status = $(this).val();

                if (status === "") {
                    // Hiển thị tất cả nếu chọn "Tất cả trạng thái"
                    table.rows().every(function () {
                        $(this.node()).show();
                    });
                } else {
                    // Lọc theo trạng thái
                    table.rows().every(function () {
                        var rowStatus = $(this.node()).data('status').toString();
                        if (rowStatus === status) {
                            $(this.node()).show();
                        } else {
                            $(this.node()).hide();
                        }
                    });
                }

                table.draw(false); // Vẽ lại bảng mà không reset paging
            });

            // Xử lý lọc tồn kho
            $('#stockFilter').change(function () {
                var stock = $(this).val();

                if (stock === '') {
                    // Hiển thị tất cả nếu chọn "Tất cả tồn kho"
                    table.rows().every(function () {
                        $(this.node()).show();
                    });
                } else {
                    // Lọc theo tồn kho
                    table.rows().every(function () {
                        var rowStock = $(this.node()).data('stock');
                        if (rowStock === stock) {
                            $(this.node()).show();
                        } else {
                            $(this.node()).hide();
                        }
                    });
                }

                table.draw(false); // Vẽ lại bảng mà không reset paging
            });

            // Hàm áp dụng tất cả bộ lọc
            function applyAllFilters() {
                var status = $('#statusFilter').val();
                var stock = $('#stockFilter').val();

                table.rows().every(function () {
                    var row = $(this.node());
                    var rowStatus = row.data('status').toString();
                    var rowStock = row.data('stock');

                    var statusMatch = (status === "") || (rowStatus === status);
                    var stockMatch = (stock === "") || (rowStock === stock);

                    if (statusMatch && stockMatch) {
                        row.show();
                    } else {
                        row.hide();
                    }
                });

                table.draw(false);
            }

            // Gán sự kiện cho cả 2 dropdown
            $('#statusFilter, #stockFilter').change(applyAllFilters);

            // Xuất Excel
            $('#exportExcel').click(function () {
                table.button('.buttons-excel').trigger();
            });

            // Xử lý khi click nút chỉnh sửa
            $(document).on('click', '.btn-outline-warning', function () {
                var row = $(this).closest('tr');
                var maKho = row.find('small.text-muted').text().replace('Mã: ', '');
                var tenSp = row.find('span.fw-semibold').text();
                var soLuong = row.find('td:nth-child(3)').text().replace(/,/g, '');
                var ghiChu = row.find('td:nth-child(6)').find('span').attr('data-bs-original-title') ||
                    row.find('td:nth-child(6)').find('span').text();

                $('#editMaKho').val(maKho);
                $('#editTenSp').val(tenSp);
                $('#editSoLuongHienTai').val(soLuong);
                $('#editSoLuongMoi').val(soLuong);
                $('#editGhiChu').val(ghiChu);

                $('#editQuantityModal').modal('show');
            });

            // Xử lý khi lưu thay đổi
            $('#btnSaveQuantity').click(function (e) {
                e.preventDefault(); // Ngăn form submit mặc định

                if (!$('#editQuantityForm')[0].checkValidity()) {
                    $('#editQuantityForm')[0].reportValidity();
                    return;
                }

                var formData = {
                    MaKho: $('#editMaKho').val(),
                    SoLuongTon: $('#editSoLuongMoi').val(),
                    GhiChu: $('#editGhiChu').val()
                };

                // Hiển thị loading để người dùng biết hệ thống đang xử lý
                $('#btnSaveQuantity').html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang lưu...')
                    .prop('disabled', true);

                $.ajax({
                    url: '@Url.Action("CapNhatSoLuong", "QuanLySanPham")',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            toastr.success('Cập nhật số lượng thành công');
                            document.getElementById('editQuantityModal').style.display = 'none';
                            document.querySelector('.modal-backdrop').remove();
                            document.body.classList.remove('modal-open');

                            // Cập nhật UI mà không cần reload
                            var row = $('tr').find(`small.text-muted:contains(${formData.MaKho})`).closest('tr');
                            if (row.length) {
                                row.find('td:nth-child(3)').text(parseInt(formData.SoLuongTon).toLocaleString());
                                row.find('td:nth-child(6) span').text(formData.GhiChu);
                                row.find('td:nth-child(6) span').attr('data-bs-original-title', formData.GhiChu);

                                // Cập nhật trạng thái tồn kho
                                var isLowStock = parseInt(formData.SoLuongTon) <= 10;
                                row.attr('data-stock', isLowStock ? "low" : "normal");
                                row.find('td:nth-child(3)')
                                    .removeClass('text-danger text-success')
                                    .addClass(isLowStock ? 'text-danger' : 'text-success');

                                // Cập nhật badge cảnh báo nếu cần
                                if (isLowStock) {
                                    row.find('.position-relative').append(`
                                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                        <i class="bi bi-exclamation-triangle-fill me-1"></i> Ít
                                    </span>
                                `);
                                } else {
                                    row.find('.position-relative .badge').remove();
                                }
                            }
                        } else {
                            toastr.error(response.message || 'Có lỗi xảy ra');
                        }
                    },
                    error: function (xhr) {
                        toastr.error('Lỗi kết nối server: ' + xhr.statusText);
                    }
                });
            });
        });
    </script>
}