@model IEnumerable<Fruitful_Gifts.Database.SanPham>
@* @using X.PagedList.Mvc.Core
@using X.PagedList *@

@{
    ViewData["Title"] = "Danh Sách Sản Phẩm Yêu Thích";
}

@section CSS
{
    <link rel="stylesheet" href="~/css/profile.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/yeuthich.css" asp-append-version="true" />
}

<div class="container mt-5">
    <div class="row">
        <div style="display: none;">
            @Html.AntiForgeryToken()
        </div>
        <!-- Sidebar -->
        <div class="col-md-3">
            @Html.Partial("~/Views/Shared/PartialsViews/_SlidebarProfile.cshtml")
        </div>

        <!-- Main content -->
        <div class="col-md-9">
            <div class="row">
                @if (Model != null && Model.Any())
                {
                    @foreach (var item in Model)
                    {
                        <div class="col-md-4 mb-4">
                            <div class="card">
                                <img src="~/images/sanpham/@item.HinhAnh" alt="@item.TenSp" class="card-img-top" />
                                <div class="card-body">
                                    <h5 class="card-title">@item.TenSp</h5>
                                    <!-- Nếu muốn hiển thị tên khách hàng thì cần lấy từ đâu? Trong controller chưa có -->
                                    <!-- Nếu không thì bỏ phần Khách hàng đi hoặc lấy từ session -->

                                    <div class="action-buttons d-flex align-items-center">
                                        <a href="@Url.Action("ChiTietSanPham", "SanPham", new { slug = item.Slug })" class="btn btn-info btn-sm me-2">
                                            <i class="fa fa-eye"></i> Xem Chi Tiết
                                        </a>

                                        <button type="button" class="btn btn-danger btn-sm remove-fav-btn" data-id="@item.MaSp">
                                            <i class="fa fa-trash"></i> Xóa
                                        </button>

                                    </div>

                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="col-12 text-center">
                        <p class="text-muted">Không có sản phẩm yêu thích nào.</p>
                    </div>
                }
            </div>
        </div>
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("DanhSachSanPhamYeuThich", new { page = i })">@i</a>
                    </li>
                }
            </ul>
        </nav>

    

    </div>
</div>
<div class="position-fixed top-0 end-0 p-3" style="z-index: 1100; min-width: 250px;">
    <div id="liveToast" class="toast align-items-center text-white bg-primary border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body" id="toast-body">Thông báo mẫu</div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>
@section Scripts
{
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        function showToast(message, type = "primary") {
            var toastEl = document.getElementById('liveToast');
            var toastBody = document.getElementById('toast-body');

            toastEl.className = "toast align-items-center text-white bg-" + type + " border-0";
            toastBody.textContent = message;

            var toast = new bootstrap.Toast(toastEl, { delay: 5000 }); // 5 giây tự tắt
            toast.show();
        }

        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll(".remove-fav-btn").forEach(button => {
                button.addEventListener("click", function () {
                    const productId = this.getAttribute("data-id");

                    // if (!confirm("Bạn có chắc muốn xóa sản phẩm này khỏi danh sách yêu thích?")) return;

                    const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

                    fetch('@Url.Action("RemoveFromFavorites", "SanPham")', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': token
                        },
                        body: JSON.stringify({ maSp: parseInt(productId) })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                showToast(data.message, "success");
                                this.closest(".col-md-4").remove();
                                // location.reload();
                            } else {
                                showToast(data.message, "danger");
                            }
                        })
                        .catch(() => {
                            showToast("Có lỗi xảy ra, vui lòng thử lại sau.", "danger");
                        });
                });
            });
        });
    </script>
}

